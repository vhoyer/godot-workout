[gd_scene load_steps=2 format=3 uid="uid://ceiy8moh5dwb4"]

[sub_resource type="GDScript" id="GDScript_erabv"]
script/source = "extends CenterContainer

func _ready():
	get_tree().get_root().size_changed.connect(update_size)
	update_size()
	populate_grid()

func update_size():
	var win = get_window()
	self.size.x = win.size.x
	self.size.y = win.size.y

func _on_button_pressed():
	get_tree().change_scene_to_file(\"res://menu/main.tscn\")


const SCENE_BTN = preload(\"res://menu/components/scene_change_btn.tscn\")
@export_dir var games_dir
@onready var grid = $VBoxContainer/GridContainer

func populate_grid() -> void:
	var dir = DirAccess.open(games_dir)
	if !dir:
		printerr(\"The gods have failed us, no dir '%s' found\" % [games_dir]);
		pass
	dir.list_dir_begin()
	while true:
		var file_name = dir.get_next()
		if file_name == \"\": break
		if !dir.current_is_dir(): continue
		var path = \"%s/%s/%s.tscn\" % [dir.get_current_dir(true), file_name, file_name]
		FileAccess.file_exists(path)
		add_game(path, file_name)
	dir.list_dir_end()
	pass

func add_game(path, name):
	var btn = SCENE_BTN.instantiate()
	btn.scene_path = path
	btn.text = name.replace('_', ' ')
	grid.add_child(btn)
"

[node name="GameSelection" type="CenterContainer"]
script = SubResource("GDScript_erabv")
games_dir = "res://games"

[node name="VBoxContainer" type="VBoxContainer" parent="."]
layout_mode = 2
theme_override_constants/separation = 30

[node name="HBoxContainer" type="HBoxContainer" parent="VBoxContainer"]
layout_mode = 2

[node name="back" type="Button" parent="VBoxContainer/HBoxContainer"]
layout_mode = 2
text = "back"

[node name="GridContainer" type="GridContainer" parent="VBoxContainer"]
layout_mode = 2
theme_override_constants/h_separation = 20
theme_override_constants/v_separation = 20
columns = 4

[connection signal="pressed" from="VBoxContainer/HBoxContainer/back" to="." method="_on_button_pressed"]
